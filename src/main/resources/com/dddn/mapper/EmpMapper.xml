<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dddn.mapper.EmpMapper">

    <update id="update">
        update emp
        <set>
            <if test="username != null and username != ''"> username = #{username}, </if>
            <if test="name != null and name !=''"> name = #{name}, </if>
            <if test="password != null and password != ''"> password = #{password}, </if>
            <if test="gender != null and gender != ''"> gender = #{gender}, </if>
            <if test="phone != null and phone != ''"> phone = #{phone}, </if>
            <if test="job != null"> job = #{job}, </if>
            <if test="salary != null and salary != ''"> salary = #{salary}, </if>
            <if test="deptId != null"> dept_id = #{deptId}, </if>
            <if test="updateTime != null"> update_time = #{updateTime}, </if>
            <if test="image != null"> image = #{image}, </if>
            <if test="entryDate != null"> entry_date = #{entryDate} </if>
        </set>
        where id = #{id};
    </update>

    <delete id="deleteEmp">
        delete from emp e where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>


    <select id="listPage" resultType="com.dddn.pojo.Emp">
        select e.*, d.name deptName from tlias.emp e left outer join tlias.dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and e.entry_date between #{begin} and #{end}
            </if>
        </where>
        order by e.update_time desc
    </select>

    <select id="selectKeysByIds" resultType="java.lang.String">
        select e.image from emp e where e.id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <resultMap id="empResultMap" type="com.dddn.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>

        <collection property="exprList" ofType="com.dddn.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_emp_id" property="empId"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
        </collection>
    </resultMap>

    <select id="getInfo" resultMap="empResultMap">
        select e.*,
               ee.id ee_id,
               ee.emp_id ee_emp_id,
               ee.begin ee_begin,
               ee.end ee_end,
               ee.company ee_company,
               ee.job ee_job
        from emp e left outer join emp_expr ee on e.id = ee.emp_id where e.id = #{id}
    </select>
    
    <select id="getEmpJobData" resultType="com.dddn.pojo.EmpJobMap">
        select (case
            when job = 1 then '班主任'
            when job = 2 then '讲师'
            when job = 3 then '学工主管'
            when job = 4 then '教研主管'
            when job = 5 then '咨询师'
            else '其他' end) jobName, count(*) jobNum
        from emp group by job;
    </select>

    <resultMap id="empGenderMapResult" type="com.dddn.pojo.EmpGenderMap">
        <result column="gender_name" property="name"/>
        <result column="value" property="value"/>
    </resultMap>

    <select id="getEmpGenderMapList" resultMap="empGenderMapResult">
        select (case when gender = 1 then '男性员工'
                     when gender = 2 then '女性员工' end) gender_name, count(*) value from emp group by gender;
    </select>
</mapper>